// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Thumbnail {
  small String?
  large String?
}

model Book {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  authors       String[]
  category      String
  price         Float
  thumbnail     Thumbnail?
  publishedDate String
  description   String
  rating        Int
  bestSelling   Boolean    @default(false)
  cartItems     CartItem[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("books")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  phoneNumber String   @unique
  cart        Cart[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("users")
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  userId    String     @db.ObjectId
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  purchased Boolean    @default(false)
  cartItems CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("carts")
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  cartId    String   @db.ObjectId
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  bookId    String   @db.ObjectId
  book      Book     @relation(fields: [bookId], references: [id], onDelete: NoAction)
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cart-items")
}
